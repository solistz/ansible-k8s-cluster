---
- hosts: workers
  remote_user: admin-energo
  become: yes
  become_method: sudo
#  become_user: root
  gather_facts: yes
  connection: ssh

  vars:
    sourse_file_daemon: ./docker/daemon.json
    destin_file: /etc/docker

  tasks:
#====================================================== INSTALL ==========

    - name: Installing Prerequisites for Kubernetes
      apt: 
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - vim
          - software-properties-common
          - iptables-persistent
          - git
        state: present

#====================================================== GPG Docker ==========

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
        filename: docker
        mode: 0600

    - name: Install Docker Engine.
      apt: 
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Enable service docker, and enable persistently
      service: 
        name: docker
        enabled: yes

#============== Docker configure and restart ==

    - name: Docker configure and restart (Copy Config file cgroupdriver)
      copy: src={{sourse_file_daemon}} dest={{destin_file}} mode=0640

    - name: Restart Docker
      service: name=docker state=restarted

#====================================================== GPG K8S ==========

    - name: Add Google official GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes Repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main 
        state: present
        filename: kubernetes
        mode: 0600

    - name: Installing Kubernetes Cluster Packages.
      apt: 
        name:
          - kubeadm
          - kubectl
          - kubelet
        state: present

    - name: Enable service kubelet, and enable persistently
      service: 
        name: kubelet
        enabled: yes


# ========================================== Lock Update K8S =====

    - name: Lock Update K8S
      shell: sudo apt-mark hold kubelet kubeadm kubectl

    - name: K8S Version
      shell: sudo kubectl version --client
      register: vark8s

    - debug:
        var: vark8s


...
